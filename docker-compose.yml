services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # for service interactions
      - "15672:15672"  # for RabbitMQ web-interface
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 2s
      timeout: 10s
      retries: 20
  
  frontend:
    build:
      context: ./frontend
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: password
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:  # Ports do not need at all for RabbitMQ
      - "5000:5000"
  
  search:
    build:
      context: ./search
    environment:
      PYTHONUNBUFFERED: 1  # For auto flush
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: password
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5010:5010"
  
  calendar:
    build:
      context: ./calendar
    environment:
      PYTHONUNBUFFERED: 1
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: password
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5005:5005"
    
  user-db:
    image: postgres:17  # Pin to specific version to omit pulling each time.
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user_admin
      POSTGRES_PASSWORD: eighty9@doublet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_admin -d users"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    ports:
      - "5432:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data

  user-service:
    build:
      context: ./user-service
    environment:
      PYTHONUNBUFFERED: 1
      DB_HOST: user-db
      DB_PORT: 5432
      DB_NAME: users
      DB_USER: user_admin
      DB_PASS: eighty9@doublet

      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: password
    depends_on:
      user-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5001:5001"
  
  task-db:
    image: postgres:17
    environment:
      POSTGRES_DB: tasks
      POSTGRES_USER: task_admin
      POSTGRES_PASSWORD: A7noth56therUser
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U task_admin -d tasks"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    ports:
      - "5433:5432"  # Outer 5433 port
    volumes:
      - task_postgres_data:/var/lib/postgresql/data

  task-service:
    build:
      context: ./task-service
    environment:
      PYTHONUNBUFFERED: 1
      DB_HOST: task-db
      DB_PORT: 5432
      DB_NAME: tasks
      DB_USER: task_admin
      DB_PASS: A7noth56therUser

      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: password
    depends_on:
      task-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5002:5002"

volumes:
  user_postgres_data:
  task_postgres_data:
